name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  # This will run on any branch push
  pull_request:
    branches:
      - '**'  # This will run on PRs targeting any branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Login to DockerHub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      
    - name: Get branch name
      id: branch_name
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^a-zA-Z0-9]/-/g')" >> $GITHUB_ENV
      
    - name: Build the Docker image
      run: |
        docker build -t ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-${{ github.sha }} -t ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-latest .
    
    - name: Push to DockerHub
      run: |
        docker push ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-${{ github.sha }}
        docker push ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-latest
    
    - name: Security Scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-latest"
        format: "table"
        ignore-unfixed: true
        severity: "HIGH,CRITICAL"
        exit-code: 0
    
    - name: SSH into EC2 & Deploy
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'  # Only deploy from main/master
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          sudo docker pull ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-latest
          sudo docker rm -f kuber-01-container || true
          sudo docker run -d -p 80:3000 --name kuber-01-container ${{secrets.DOCKER_USERNAME}}/kuber-01:${{ env.BRANCH_NAME }}-latest
    
    - name: Send Slack Notification (Success)
      if: success()
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        curl -X POST -H 'Content-type: application/json' --data '{
          "blocks": [
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Branch*\n`${{ env.BRANCH_NAME }}`"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Event*\n${{ github.event_name }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Actions URL*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|CI/CD Pipeline>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${SHORT_SHA}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "✅ CI/CD Pipeline Successful!\n:tada: The build for branch *${{ env.BRANCH_NAME }}* was successful! :white_check_mark:"
              }
            }
          ]
        }' ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Send Slack Notification (Failure)
      if: failure()
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        curl -X POST -H 'Content-type: application/json' --data '{
          "blocks": [
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Branch*\n`${{ env.BRANCH_NAME }}`"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Event*\n${{ github.event_name }}"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Actions URL*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|CI/CD Pipeline>"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit*\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${SHORT_SHA}>"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "❌ CI/CD Pipeline Failed!\n:warning: The build for branch *${{ env.BRANCH_NAME }}* failed! Check GitHub Actions logs."
              }
            }
          ]
        }' ${{ secrets.SLACK_WEBHOOK_URL }}
    
    - name: Send Email Notification (Success)
      if: success()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: CI/CD Pipeline Successful - Branch ${{ env.BRANCH_NAME }}
        body: The build for branch ${{ env.BRANCH_NAME }} was successful!
        to: bamit9160@gmail.com
        from: ${{ secrets.MAIL_USERNAME }}

    - name: Send Email Notification (Failure)
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.MAIL_USERNAME }}
        password: ${{ secrets.MAIL_PASSWORD }}
        subject: CI/CD Pipeline Failed - Branch ${{ env.BRANCH_NAME }}
        body: The build for branch ${{ env.BRANCH_NAME }} failed! Check GitHub Actions logs.
        to: bamit9160@gmail.com
        from: ${{ secrets.MAIL_USERNAME }}